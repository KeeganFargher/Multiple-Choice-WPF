<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="DataSetMark" targetNamespace="http://tempuri.org/DataSetMark.xsd" xmlns:mstns="http://tempuri.org/DataSetMark.xsd" xmlns="http://tempuri.org/DataSetMark.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="MultipleChoiceConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="MultipleChoiceConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.MultipleChoiceUI.Properties.Settings.GlobalReference.Default.MultipleChoiceConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="MarkTableAdapter" GeneratorDataComponentClassName="MarkTableAdapter" Name="DataTableMarks" UserDataComponentName="MarkTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="MultipleChoiceConnectionString (Settings)" DbObjectName="dbo.Mark" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [mark] WHERE (([User_ID] = @Original_User_ID) AND ([Test_ID] = @Original_Test_ID) AND ([User_Mark] = @Original_User_Mark))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_User_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="User_ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Test_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Test_ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_User_Mark" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="User_Mark" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [mark] ([User_ID], [Test_ID], [User_Mark]) VALUES (@User_ID, @Test_ID, @User_Mark);
SELECT User_ID, Test_ID, User_Mark FROM Mark WHERE (Test_ID = @Test_ID) AND (User_ID = @User_ID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@User_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="User_ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Test_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Test_ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@User_Mark" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="User_Mark" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>select * from mark</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [mark] SET [User_ID] = @User_ID, [Test_ID] = @Test_ID, [User_Mark] = @User_Mark WHERE (([User_ID] = @Original_User_ID) AND ([Test_ID] = @Original_Test_ID) AND ([User_Mark] = @Original_User_Mark));
SELECT User_ID, Test_ID, User_Mark FROM Mark WHERE (Test_ID = @Test_ID) AND (User_ID = @User_ID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@User_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="User_ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Test_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Test_ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@User_Mark" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="User_Mark" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_User_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="User_ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Test_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Test_ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_User_Mark" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="User_Mark" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="User_ID" DataSetColumn="User_ID" />
              <Mapping SourceColumn="Test_ID" DataSetColumn="Test_ID" />
              <Mapping SourceColumn="User_Mark" DataSetColumn="User_Mark" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="DataSetMark" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="true" msprop:Generator_DataSetName="DataSetMark" msprop:Generator_UserDSName="DataSetMark">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="DataTableMarks" msprop:Generator_TableClassName="DataTableMarksDataTable" msprop:Generator_TableVarName="tableDataTableMarks" msprop:Generator_TablePropName="DataTableMarks" msprop:Generator_RowDeletingName="DataTableMarksRowDeleting" msprop:Generator_RowChangingName="DataTableMarksRowChanging" msprop:Generator_RowEvHandlerName="DataTableMarksRowChangeEventHandler" msprop:Generator_RowDeletedName="DataTableMarksRowDeleted" msprop:Generator_UserTableName="DataTableMarks" msprop:Generator_RowChangedName="DataTableMarksRowChanged" msprop:Generator_RowEvArgName="DataTableMarksRowChangeEvent" msprop:Generator_RowClassName="DataTableMarksRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="User_ID" msprop:Generator_ColumnVarNameInTable="columnUser_ID" msprop:Generator_ColumnPropNameInRow="User_ID" msprop:Generator_ColumnPropNameInTable="User_IDColumn" msprop:Generator_UserColumnName="User_ID" type="xs:int" />
              <xs:element name="Test_ID" msprop:Generator_ColumnVarNameInTable="columnTest_ID" msprop:Generator_ColumnPropNameInRow="Test_ID" msprop:Generator_ColumnPropNameInTable="Test_IDColumn" msprop:Generator_UserColumnName="Test_ID" type="xs:int" />
              <xs:element name="User_Mark" msprop:Generator_ColumnVarNameInTable="columnUser_Mark" msprop:Generator_ColumnPropNameInRow="User_Mark" msprop:Generator_ColumnPropNameInTable="User_MarkColumn" msprop:Generator_UserColumnName="User_Mark" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:DataTableMarks" />
      <xs:field xpath="mstns:User_ID" />
      <xs:field xpath="mstns:Test_ID" />
    </xs:unique>
  </xs:element>
</xs:schema>